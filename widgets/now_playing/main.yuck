(deflisten playing_
  "./widgets/now_playing/script.sh"
)  ; playing_ JSON
(defvar playing_popup_visible false)
(defvar playing_popup_ts 0)

(defwidget playing []
  (eventbox
    :onclick "eww update playing_popup_visible=${!playing_popup_visible}; eww update playing_popup_ts=${EWW_TIME}"
    :valign "center"
    :halign "center"
    (revealer
      :reveal {playing_.status != "Stopped"}
      :transition {config.playing.revealer_transition}
      :duration {config.playing.revealer_duration}
      (stack
        :selected {playing_popup_visible && EWW_TIME - playing_popup_ts < config.playing.popup_timeout ? 1 : 0}
        :transition {config.playing.stack_transition}
        :duration {config.playing.stack_duration}
        :same-size false
        :orientation "v"
        :spacing 0
        :space-evenly false
        ; :valign "center"
        :halign "center"
        (playing_default)
        (playing_popup)
      )
    )  ; box for playing column
  )
) ; playing

(defwidget playing_default []
  (eventbox
    :class "playing"
    (box
      :orientation "h"
      :spacing 0
      :space-evenly false
      ; :valign "center"
      :halign "center"
      (image
        :class "thumbnail"
        :halign "center"
        ; :valign "center"
        :image-height {config.playing.default.thumbnail_image_height}
        :path {replace(playing_.thumbnail, "file://", "")}
      )
      (box
        :class "label"
        :orientation "v"
        :spacing 0
        :space-evenly false
        :halign "center"
        ; :valign "center"
        (label
          :class "artist"
          :text {playing_.artist}
          :limit-width 20
        )
        (label
          :class "title"
          :text {playing_.title}
          :limit-width 30
        )
      )
    )
  )
)

(defwidget playing_popup []
  (eventbox
    :onhover "eww update playing_popup_ts=${EWW_TIME}"
    :onhoverlost "eww update playing_popup_visible=false"
    (box
      :class "playing_popup"
      :orientation "h"
      :spacing 0
      :space-evenly false
      :valign "center"
      :halign "center"
      :visible {playing_.status != "Stopped"}
      (image
        :class "thumbnail"
        :image-height {config.playing.popup.thumbnail_image_height}
        :width 5
        :path {replace(playing_.thumbnail, "file://", "")}
      )
      (box
        :class "label"
        :orientation "v"
        :spacing 10
        :space-evenly false
        :halign "center"
        :valign "center"
        (label
          :class "artist"
          :halign "center"
          :valign "center"
          :text {playing_.artist}
          :textalign "center"
          :wrap true
        )
        (label
          :class "title"
          :halign "center"
          :valign "center"
          :textalign "center"
          :truncate false
          :show-truncated false
          :limit-width {config.playing.popup.title_limit_width}
          :hexpand true
          :vexpand true
          :wrap true
          :text {playing_.title}
        )
        (box
          :class "controls"
          :orientation "h"
          :spacing 30
          :space-evenly false
          :valign "center"
          :halign "center"
          :width 5
          (button
            :halign "center"
            :valign "center"
            :onclick "playerctl previous"
            "󰒮"
          )
          (button
            :halign "center"
            :valign "center"
            :onclick "playerctl stop"
            ""
          )
          (button
            :halign "center"
            :valign "center"
            :onclick "playerctl play-pause"
            "${playing_.status == "Paused" ? "" : ""}"
          )
          (button
            :halign "center"
            :valign "center"
            :onclick "playerctl next"
            "󰒭"
          )
        ) ; box <prev> <play/pause> <next> controls
      ) ; box label artist, title, controls
    )) ; box playing popup
) ; playing_popup defwidget
